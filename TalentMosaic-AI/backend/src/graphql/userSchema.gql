# Esquema de Usuario
type User {
  id: ID!
  firstName: String
  lastName: String
  email: String
  role: String
  linkedInToken: String
  createdAt: String
  updatedAt: String
}

# Entrada para crear un usuario
input CreateUserInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  role: String!
}

# Entrada para login
input LoginInput {
  email: String!
  password: String!
}

# Definición de Queries
type Query {
  getAllUsers: [User]
  getUserById(id: ID!): User
}

# Definición de Mutations
type Mutation {
  createUser(input: CreateUserInput!): User
  updateUser(id: ID!, input: CreateUserInput!): User
  deleteUser(id: ID!): Boolean
  register(input: CreateUserInput!): User
  login(input: LoginInput!): AuthPayload
}

# Tipo de retorno para login
type AuthPayload {
  token: String!
  user: User!
}
